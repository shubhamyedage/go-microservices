// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vessel/vessel.proto

package vessel

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Vessel struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,3,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Available            bool     `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	OwnerId              string   `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vessel) Reset()         { *m = Vessel{} }
func (m *Vessel) String() string { return proto.CompactTextString(m) }
func (*Vessel) ProtoMessage()    {}
func (*Vessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ef66862bb50716, []int{0}
}

func (m *Vessel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vessel.Unmarshal(m, b)
}
func (m *Vessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vessel.Marshal(b, m, deterministic)
}
func (m *Vessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vessel.Merge(m, src)
}
func (m *Vessel) XXX_Size() int {
	return xxx_messageInfo_Vessel.Size(m)
}
func (m *Vessel) XXX_DiscardUnknown() {
	xxx_messageInfo_Vessel.DiscardUnknown(m)
}

var xxx_messageInfo_Vessel proto.InternalMessageInfo

func (m *Vessel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vessel) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Vessel) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

func (m *Vessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vessel) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Vessel) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type Specification struct {
	Capacity             int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,2,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Specification) Reset()         { *m = Specification{} }
func (m *Specification) String() string { return proto.CompactTextString(m) }
func (*Specification) ProtoMessage()    {}
func (*Specification) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ef66862bb50716, []int{1}
}

func (m *Specification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specification.Unmarshal(m, b)
}
func (m *Specification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specification.Marshal(b, m, deterministic)
}
func (m *Specification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specification.Merge(m, src)
}
func (m *Specification) XXX_Size() int {
	return xxx_messageInfo_Specification.Size(m)
}
func (m *Specification) XXX_DiscardUnknown() {
	xxx_messageInfo_Specification.DiscardUnknown(m)
}

var xxx_messageInfo_Specification proto.InternalMessageInfo

func (m *Specification) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Specification) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

type Response struct {
	Vessel               *Vessel   `protobuf:"bytes,1,opt,name=vessel,proto3" json:"vessel,omitempty"`
	Vessels              []*Vessel `protobuf:"bytes,2,rep,name=vessels,proto3" json:"vessels,omitempty"`
	Created              bool      `protobuf:"varint,3,opt,name=Created,proto3" json:"Created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ef66862bb50716, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetVessel() *Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *Response) GetVessels() []*Vessel {
	if m != nil {
		return m.Vessels
	}
	return nil
}

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func init() {
	proto.RegisterType((*Vessel)(nil), "vessel.Vessel")
	proto.RegisterType((*Specification)(nil), "vessel.Specification")
	proto.RegisterType((*Response)(nil), "vessel.Response")
}

func init() { proto.RegisterFile("proto/vessel/vessel.proto", fileDescriptor_04ef66862bb50716) }

var fileDescriptor_04ef66862bb50716 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0xfd, 0x6d, 0xda, 0xa6, 0xe9, 0xfc, 0x48, 0x91, 0x01, 0x61, 0x5b, 0x14, 0x42, 0x0e, 0x92,
	0x83, 0x54, 0xa8, 0x37, 0x6f, 0x22, 0x08, 0x7a, 0xdc, 0x82, 0x1e, 0xcb, 0x36, 0x3b, 0xea, 0x42,
	0xfe, 0x91, 0x84, 0xb4, 0xfd, 0x36, 0x7e, 0x54, 0x61, 0x92, 0x54, 0x5a, 0x8a, 0xa7, 0x9d, 0xf7,
	0xe6, 0xed, 0xe3, 0xed, 0x5b, 0x98, 0x15, 0x65, 0x5e, 0xe7, 0x77, 0x0d, 0x55, 0x15, 0x25, 0xdd,
	0xb1, 0x60, 0x0e, 0xdd, 0x16, 0x85, 0xdf, 0x02, 0xdc, 0x37, 0x1e, 0x71, 0x0a, 0x8e, 0x35, 0x52,
	0x04, 0x22, 0x9a, 0x28, 0xc7, 0x1a, 0x9c, 0x83, 0x17, 0xeb, 0x42, 0xc7, 0xb6, 0xde, 0x4b, 0x27,
	0x10, 0xd1, 0x48, 0x1d, 0x30, 0x5e, 0x03, 0xa4, 0x7a, 0xb7, 0xde, 0x92, 0xfd, 0xfc, 0xaa, 0xe5,
	0x80, 0xb7, 0x93, 0x54, 0xef, 0xde, 0x99, 0x40, 0x84, 0x61, 0xa6, 0x53, 0x92, 0x43, 0x36, 0xe3,
	0x19, 0xaf, 0x60, 0xa2, 0x1b, 0x6d, 0x13, 0xbd, 0x49, 0x48, 0x8e, 0x02, 0x11, 0x79, 0xea, 0x97,
	0xc0, 0x19, 0x78, 0xf9, 0x36, 0xa3, 0x72, 0x6d, 0x8d, 0x74, 0xf9, 0xd6, 0x98, 0xf1, 0x8b, 0x09,
	0x5f, 0xc1, 0x5f, 0x15, 0x14, 0xdb, 0x0f, 0x1b, 0xeb, 0xda, 0xe6, 0xd9, 0x51, 0x30, 0xf1, 0x67,
	0x30, 0xe7, 0x24, 0x58, 0xd8, 0x80, 0xa7, 0xa8, 0x2a, 0xf2, 0xac, 0x22, 0xbc, 0x81, 0xae, 0x04,
	0x36, 0xf9, 0xbf, 0x9c, 0x2e, 0xba, 0x86, 0xda, 0x3e, 0x54, 0xb7, 0xc5, 0x08, 0xc6, 0xed, 0x54,
	0x49, 0x27, 0x18, 0x9c, 0x11, 0xf6, 0x6b, 0x94, 0x30, 0x7e, 0x2a, 0x49, 0xd7, 0x64, 0xb8, 0x12,
	0x4f, 0xf5, 0x70, 0xb9, 0x07, 0xbf, 0x15, 0xaf, 0xa8, 0x6c, 0x6c, 0x4c, 0xf8, 0x00, 0xfe, 0xb3,
	0xcd, 0xcc, 0xe3, 0xa1, 0x80, 0xcb, 0xde, 0xf4, 0xe8, 0xad, 0xf3, 0x8b, 0x9e, 0xee, 0x63, 0x87,
	0xff, 0xf0, 0x16, 0xdc, 0xd6, 0x17, 0x4f, 0x92, 0x9c, 0x53, 0x6f, 0x5c, 0xfe, 0xf0, 0xfb, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x9c, 0x1f, 0x7d, 0x0d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VesselServiceClient is the client API for VesselService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VesselServiceClient interface {
	FindAvailable(ctx context.Context, in *Specification, opts ...grpc.CallOption) (*Response, error)
	Create(ctx context.Context, in *Vessel, opts ...grpc.CallOption) (*Response, error)
}

type vesselServiceClient struct {
	cc *grpc.ClientConn
}

func NewVesselServiceClient(cc *grpc.ClientConn) VesselServiceClient {
	return &vesselServiceClient{cc}
}

func (c *vesselServiceClient) FindAvailable(ctx context.Context, in *Specification, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/vessel.VesselService/FindAvailable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vesselServiceClient) Create(ctx context.Context, in *Vessel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/vessel.VesselService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VesselServiceServer is the server API for VesselService service.
type VesselServiceServer interface {
	FindAvailable(context.Context, *Specification) (*Response, error)
	Create(context.Context, *Vessel) (*Response, error)
}

// UnimplementedVesselServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVesselServiceServer struct {
}

func (*UnimplementedVesselServiceServer) FindAvailable(ctx context.Context, req *Specification) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAvailable not implemented")
}
func (*UnimplementedVesselServiceServer) Create(ctx context.Context, req *Vessel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterVesselServiceServer(s *grpc.Server, srv VesselServiceServer) {
	s.RegisterService(&_VesselService_serviceDesc, srv)
}

func _VesselService_FindAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Specification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VesselServiceServer).FindAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vessel.VesselService/FindAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VesselServiceServer).FindAvailable(ctx, req.(*Specification))
	}
	return interceptor(ctx, in, info, handler)
}

func _VesselService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vessel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VesselServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vessel.VesselService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VesselServiceServer).Create(ctx, req.(*Vessel))
	}
	return interceptor(ctx, in, info, handler)
}

var _VesselService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vessel.VesselService",
	HandlerType: (*VesselServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAvailable",
			Handler:    _VesselService_FindAvailable_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _VesselService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/vessel/vessel.proto",
}
